// Safe environment variables - never crashes`ninterface EnvConfig {`n    SUPABASE_URL: string;`n    SUPABASE_ANON_KEY: string;`n    NODE_ENV: string;`n    DEV: boolean;`n    PROD: boolean;`n}`n`nfunction validateEnv(): EnvConfig {`n    const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;`n    const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;`n    `n    if (!supabaseUrl || !supabaseAnonKey) {`n        const missing = [];`n        if (!supabaseUrl) missing.push("VITE_SUPABASE_URL");`n        if (!supabaseAnonKey) missing.push("VITE_SUPABASE_ANON_KEY");`n        `n        console.warn(``Missing env vars: `${missing.join(", ")}``);`n        console.warn("Add them in Vercel Dashboard");`n    }`n`n    return {`n        SUPABASE_URL: supabaseUrl || "https://placeholder.supabase.co",`n        SUPABASE_ANON_KEY: supabaseAnonKey || "placeholder-anon-key",`n        NODE_ENV: import.meta.env.NODE_ENV || "development",`n        DEV: import.meta.env.DEV || false,`n        PROD: import.meta.env.PROD || false,`n    };`n}`n`nlet env: EnvConfig;`ntry {`n    env = validateEnv();`n} catch (error) {`n    console.error("Env error:", error);`n    env = {`n        SUPABASE_URL: "https://placeholder.supabase.co",`n        SUPABASE_ANON_KEY: "placeholder-anon-key",`n        NODE_ENV: "development",`n        DEV: true,`n        PROD: false,`n    };`n}`n`nexport { env };`nexport default env;
